name: 애자일허브 backend DEV CD

env: 
  DOCKER_HUB_REPOSITORY: msdockerl/agilehub-dev

on:
  workflow_dispatch:
  push:
    branches:
      - develop
    paths:
      - "src/**"

jobs:
  backend-docker-build-and-push:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3
    
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v3
      # Docker Buildx를 설정한다

    - name: Login to Docker Hub
      uses: docker/login-action@v3.0.0
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and Push
      uses: docker/build-push-action@v2
      with:
        context: ./  
        # Dockerfile이 있는 위치
        file: ./Dockerfile  
        # Dockerfile의 경로
        push: true  
        # 이미지를 레지스트리에 푸시
        tags: ${{ env.DOCKER_HUB_REPOSITORY }}:${{ github.sha }}  
        platforms: linux/amd64,linux/arm64,windows/amd64

  
  backend-docker-pull-and-run:
    needs: [ backend-docker-build-and-push ]
    if: ${{ needs.backend-docker-build-and-push.result == 'success' }}
    runs-on: [self-hosted, cd-actions]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup SSH Key
        run: |
          echo "${{ secrets.PEM_KEY }}" > pem_key
          chmod 600 pem_key

      - name: WAS인스턴스 접속 및 애플리케이션 실행
        run: |
          ssh -i pem_key -o StrictHostKeyChecking=no ${{ secrets.WAS_USERNAME }}@${{ secrets.WAS_PRIVATE_IP }} << EOF
          docker rm -f agilehub-dev-backend || true
          docker pull ${{ env.DOCKER_HUB_REPOSITORY }}:${{ github.sha }}
          docker run -d -p 8080:8080 --name agilehub-dev-backend ${{ env.DOCKER_HUB_REPOSITORY }}:${{ github.sha }}
          EOF

     
       
    
  
      
